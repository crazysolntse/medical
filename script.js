async function askAI() {
  const input = document.getElementById('questionInput');
  const responseDiv = document.getElementById('response');
  const question = input.value.trim();

  if (!question) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å.");
    return;
  }

  responseDiv.textContent = "–û–±—Ä–∞–±–æ—Ç–∫–∞...";
  input.disabled = true;

  const apiKey = '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'; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á

  try {
    const res = await fetch("https://openrouter.ai/api/v1/chat/completions ", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${apiKey}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "qwen/qwen-max", // –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ deepseek/deepseek-chat –∏–ª–∏ –¥—Ä.
        messages: [
          {
            role: "system",
            content: "–í—ã - –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –î–∞–≤–∞–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–¥–æ—Ä–æ–≤—å—é, –Ω–µ —Å—Ç–∞–≤—å—Ç–µ –¥–∏–∞–≥–Ω–æ–∑, –∞ —Å–æ–≤–µ—Ç—É–π—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
          },
          {
            role: "user",
            content: question
          }
        ],
        max_tokens: 200,
        temperature: 0.7
      })
    });

    const data = await res.json();
    if (data.error) {
      throw new Error(data.error.message || "–û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞");
    }

    const answer = data.choices[0]?.message?.content || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.";
    responseDiv.textContent = "üß† –û—Ç–≤–µ—Ç: " + answer;
  } catch (err) {
    console.error(err);
    responseDiv.textContent = "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç AI.";
  } finally {
    input.disabled = false;
  }
}
